import{d as m,j as e,B as o,D as z,n as E,o as Q,p as _,q as M,S as c,T as d,v as C,w as k,P as N,A as y,x as A,L as P}from"./index-C0Q8VWjK.js";import{u as B,F as V,a as W}from"./FilterField-DQZgmguS.js";import{P as $}from"./PageHeader-CpFfEDyb.js";import{S as O}from"./SciDataGrid-DMsiEfI8.js";import{u as G,f as J,F as K}from"./useListQuery-Dtg_KjS8.js";import{S as U}from"./DataGrid-DwRL6j1g.js";import{A as X,C as Y}from"./Close-JJFPdXYc.js";import"./DatePicker-YMhdA29N.js";import"./DateCalendar-_mxpKeza.js";import"./colorManipulator-Cg6R4UFJ.js";import"./Grid-BcFAXgmE.js";import"./useQuery-BeSr9Xf2.js";import"./useGridRootProps-DIB58plh.js";import"./MenuItem-C59pqvBe.js";import"./dividerClasses-B1wUZEbF.js";import"./Divider-C47M7BkH.js";const Z=({filterConfigs:i,searchTerm:r,setPreviewItem:t})=>{const{activeFilters:a}=B(),[l,p]=m.useState(0),[n,x]=m.useState(25),[g,j]=m.useState(l*n),F="_id",b="client",{isPending:I,isFetching:L,isError:T,data:H,error:R}=G({activeFilters:a,dataSource:"data/homologs_sample.json",filterConfigs:i,offset:g,pageSize:n,queryMode:b,staticParams:null}),D=s=>{t(s.row)},q=s=>{const f=s.pageSize!==n?0:s.page,h=s.pageSize,v=f*h;p(f),x(h),j(v)};if(I){const f=new Array(n).fill(null).map((h,v)=>v);return e.jsx(o,{sx:{padding:2},children:f.map(h=>e.jsx(U,{height:50},h))})}return T?e.jsx(X,{severity:"error",children:R.message}):e.jsxs(e.Fragment,{children:[L&&e.jsx(z,{variant:"indeterminate"}),e.jsx(O,{rows:J(H,a,i,r),pagination:!0,paginationMode:b,onPaginationModelChange:q,getRowId:s=>s[F],columns:[{field:"_id",headerName:"ID",width:200},{field:"queryTranscriptName",headerName:"Query Transcript",width:180},{field:"queryLocusName",headerName:"Query Locus",width:180},{field:"queryIdentifier",headerName:"Query ID",width:120},{field:"hitTranscriptName",headerName:"Hit Transcript",width:180},{field:"hitLocusName",headerName:"Hit Locus",width:180},{field:"hitIdentifier",headerName:"Hit ID",width:120},{field:"hitDefline",headerName:"Hit Description",width:300},{field:"hitProteome",headerName:"Hit Proteome",width:130},{field:"toProt",headerName:"To Prot",width:100},{field:"identities",headerName:"Identities",type:"number",width:120},{field:"coverage",headerName:"Coverage",type:"number",width:120},{field:"positives",headerName:"Positives",type:"number",width:120},{field:"score",headerName:"Score",type:"number",width:100},{field:"evalue",headerName:"E-value",type:"number",width:120},{field:"isPrimary",headerName:"Is Primary",type:"number",width:120},{field:"intQueryIdentifier",headerName:"Int Query ID",type:"number",width:140},{field:"intHitIdentifier",headerName:"Int Hit ID",type:"number",width:140},{field:"insertString",headerName:"Insert String",width:150}],disableColumnSelector:!0,autoHeight:!0,initialState:{pagination:{paginationModel:{page:l,pageSize:n}}},onRowClick:D})]})};var u={},w;function ee(){if(w)return u;w=1;var i=E();Object.defineProperty(u,"__esModule",{value:!0}),u.default=void 0;var r=i(Q()),t=_();return u.default=(0,r.default)((0,t.jsx)("path",{d:"M10 18h4v-2h-4zM3 6v2h18V6zm3 7h12v-2H6z"}),"FilterList"),u}var ie=ee();const te=M(ie),re=({searchTerm:i,setSearchTerm:r,onToggleFiltersPanel:t})=>{const a=l=>{r(l.target.value)};return e.jsxs(c,{direction:"row",spacing:2,alignItems:"center",sx:{overflow:"hidden",padding:2},children:[e.jsx(d,{variant:"h6",component:"h2",flex:1,children:"Entity List"}),e.jsx(C,{startIcon:e.jsx(te,{}),onClick:t,children:"Filters"}),e.jsx(k,{variant:"outlined",label:"Search",size:"small",value:i,onChange:a})]})},ae=({filterConfigs:i,onClose:r})=>e.jsx(K,{grouped:!1,onClose:r,sx:{border:"none"},children:i.map((t,a)=>e.jsx(V,{field:t.field,label:t.label,operator:"contains",filterComponent:t.filterComponent,filterProps:t.filterProps},`${t.field}-${a}`))}),ne=({previewItem:i,onClose:r})=>e.jsx(N,{elevation:0,sx:{height:"100%",padding:2},children:e.jsxs(c,{spacing:3,children:[e.jsxs(c,{spacing:1,children:[e.jsxs(c,{direction:"row",children:[e.jsx(d,{variant:"h6",component:"h3",flex:1,children:e.jsx(y,{to:"/explore-data/$id",params:{id:i._id},children:i.queryTranscriptName})}),e.jsx(A,{size:"small",onClick:r,children:e.jsx(Y,{})})]}),e.jsx(d,{variant:"body2",children:i.hitDefline})]}),e.jsxs(o,{children:[e.jsx(d,{fontWeight:"medium",mb:1,children:"Query Information"}),e.jsx(P,{rows:[{label:"Query Transcript",value:i.queryTranscriptName},{label:"Query Locus",value:i.queryLocusName},{label:"Query Identifier",value:i.queryIdentifier}]})]}),e.jsxs(o,{children:[e.jsx(d,{fontWeight:"medium",mb:1,children:"Hit Information"}),e.jsx(P,{rows:[{label:"Hit Transcript",value:i.hitTranscriptName},{label:"Hit Locus",value:i.hitLocusName},{label:"Hit Identifier",value:i.hitIdentifier},{label:"Hit Proteome",value:i.hitProteome}]})]}),e.jsxs(o,{children:[e.jsx(d,{fontWeight:"medium",mb:1,children:"Alignment Statistics"}),e.jsx(P,{rows:[{label:"Score",value:i.score},{label:"E-value",value:i.evalue},{label:"Identities",value:i.identities},{label:"Positives",value:i.positives},{label:"Coverage",value:i.coverage},{label:"Is Primary",value:i.isPrimary}]})]}),e.jsx(c,{direction:"row",spacing:1,children:e.jsx(y,{to:"/explore-data/$id",params:{id:i._id},children:e.jsx(C,{variant:"contained",children:"View details"})})})]})}),S=[{field:"identities",label:"Identities",operator:"between-inclusive",filterComponent:"RangeSlider",filterProps:{min:0,max:500}},{field:"coverage",label:"Coverage",operator:"between-inclusive",filterComponent:"RangeSlider",filterProps:{min:0,max:500}},{field:"positives",label:"Positives",operator:"between-inclusive",filterComponent:"RangeSlider",filterProps:{min:0,max:500}},{field:"score",label:"Score",operator:"between-inclusive",filterComponent:"RangeSlider",filterProps:{min:0,max:1e3}},{field:"evalue",label:"E-value",operator:"between-inclusive",filterComponent:"RangeSlider",filterProps:{min:0,max:1,step:1e-4}},{field:"isPrimary",label:"Is Primary",operator:"between-inclusive",filterComponent:"RangeSlider",filterProps:{min:0,max:1,step:1}}],ye=function(){const[r,t]=m.useState(""),[a,l]=m.useState(),[p,n]=m.useState(!0),x=()=>{n(!1)},g=()=>{n(!p)},j=()=>{l(null)};return e.jsx(W,{children:e.jsxs(o,{children:[e.jsx($,{pageTitle:"Explore Homologs",description:"Browse and analyze transcript homolog data from Phytozome",sx:{marginBottom:1,padding:2}}),e.jsx(o,{children:e.jsxs(c,{direction:"row",children:[p&&e.jsx(o,{sx:{width:"350px"},children:e.jsx(ae,{filterConfigs:S,onClose:x})}),e.jsxs(N,{elevation:0,sx:{flex:1,minHeight:"600px",minWidth:0},children:[e.jsx(re,{searchTerm:r,setSearchTerm:t,onToggleFiltersPanel:g}),e.jsx(Z,{filterConfigs:S,searchTerm:r,setPreviewItem:l})]}),a&&e.jsx(o,{sx:{minWidth:"400px"},children:e.jsx(ne,{previewItem:a,onClose:j})})]})})]})})};export{ye as component};
